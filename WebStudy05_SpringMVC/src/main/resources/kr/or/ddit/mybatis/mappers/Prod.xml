<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">

	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prodId" column="PROD_ID"/>
<!-- 		<association property="buyer" javaType="BuyerVO" autoMapping="true"/> -->
		<collection property="memberSet" ofType="MemberVO" autoMapping="true"/>
	</resultMap>
	<select id="selectProd" parameterType="string" resultMap="prodMap">
		WITH CARTVIEW AS (
			SELECT DISTINCT CART_PROD, CART_MEMBER
			FROM CART 
		), CARTMEMBER AS ( 
			SELECT MEM_ID, MEM_NAME, MEM_HP, MEM_MAIL, CART_PROD
			FROM CARTVIEW INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID )
		)
		SELECT 
		    PROD_ID,    PROD_NAME,    PROD_LGU,
		    PROD_BUYER,    PROD_COST,    PROD_PRICE,
		    PROD_SALE,    PROD_OUTLINE,    PROD_DETAIL,
		    PROD_IMG,    PROD_TOTALSTOCK,    TO_CHAR(PROD_INSDATE, 'YYYY-MM-DD') PROD_INSDATE,
		    PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,
		    PROD_DELIVERY,    PROD_UNIT,    PROD_QTYIN,
		    PROD_QTYSALE,    PROD_MILEAGE
		    , LPROD_NM
		    , BUYER_ID "buyer.buyerId", BUYER_NAME "buyer.buyerName"
		    , BUYER_CHARGER "buyer.buyerCharger", BUYER_ADD1 "buyer.buyerAdd1"
		    , MEM_ID, MEM_NAME, MEM_HP, MEM_MAIL
		FROM PRODVIEW LEFT OUTER JOIN CARTMEMBER ON (PROD_ID = CART_PROD)
		WHERE PROD_ID = #{prodId}
	</select>
	
	<sql id="searchFrag">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="detailCondition neq null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodLgu)">
				    AND	PROD_LGU = #{detailCondition.prodLgu}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodBuyer)">
					AND  PROD_BUYER = #{detailCondition.prodBuyer}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodName)">
					AND  INSTR(PROD_NAME, #{detailCondition.prodName}) > 0
				</if>
			</if>
		</trim>
	</sql>
	
	<select id="selectTotalRecord" resultType="int">
		SELECT COUNT(*)
		FROM PRODVIEW
		<include refid="searchFrag" />
	</select>
	
	<select id="selectProdList" parameterType="PagingVO" resultType="ProdVO">
		SELECT B.*
		FROM(
			SELECT ROWNUM RNUM, A.*
			FROM (
				SELECT PROD_ID, PROD_NAME, TO_CHAR(PROD_INSDATE, 'YYYY-MM-DD') PROD_INSDATE
					, PROD_COST, PROD_PRICE, PROD_MILEAGE
					, BUYER_NAME "buyer.buyerName", LPROD_NM
				FROM PRODVIEW
				<include refid="searchFrag" />
				ORDER BY PROD_ID DESC
			) A
		) B
		<![CDATA[
			WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
		]]>
	</select>
	
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey resultType="string" keyProperty="prodId" order="BEFORE">
			SELECT #{prodLgu}||LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID), 5)), 0)+1, 6, '0')
			FROM PROD
			WHERE PROD_LGU = #{prodLgu}
		</selectKey>
		INSERT INTO PROD (
		    PROD_ID
		    , PROD_NAME
		    , PROD_LGU
		    , PROD_BUYER
		    , PROD_COST
		    , PROD_PRICE
		    , PROD_SALE
		    , PROD_OUTLINE
		    , PROD_DETAIL
		    , PROD_IMG
		    , PROD_TOTALSTOCK
		    , PROD_INSDATE
		    , PROD_PROPERSTOCK
		    , PROD_SIZE
		    , PROD_COLOR
		    , PROD_DELIVERY
		    , PROD_UNIT
		    , PROD_QTYIN
		    , PROD_QTYSALE
		    , PROD_MILEAGE
		) VALUES (
			#{prodId,jdbcType=VARCHAR}
			, #{prodName,jdbcType=VARCHAR}
			, #{prodLgu,jdbcType=CHAR}
			, #{prodBuyer,jdbcType=CHAR}
			, #{prodCost,jdbcType=NUMERIC}
			, #{prodPrice,jdbcType=NUMERIC}
			, #{prodSale,jdbcType=NUMERIC}
			, #{prodOutline,jdbcType=VARCHAR}
			, #{prodDetail,jdbcType=CLOB}
			, #{prodImg,jdbcType=VARCHAR}
			, #{prodTotalstock,jdbcType=NUMERIC}
			, SYSDATE
			, #{prodProperstock,jdbcType=NUMERIC}
			, #{prodSize,jdbcType=VARCHAR}
			, #{prodColor,jdbcType=VARCHAR}
			, #{prodDelivery,jdbcType=VARCHAR}
			, #{prodUnit,jdbcType=VARCHAR}
			, #{prodQtyin,jdbcType=NUMERIC}
			, #{prodQtysale,jdbcType=NUMERIC}
			, #{prodMileage,jdbcType=NUMERIC}
		)
	</insert>
</mapper>













